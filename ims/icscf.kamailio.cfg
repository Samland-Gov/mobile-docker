#!KAMAILIO

####### Global Parameters #########

log_stderror=yes
memdbg=5
memlog=5

#!define HSS_HOST "hss.mnc001.mcc001.3gppnetwork.org"
#!define HSS_REALM "epc.mnc001.mcc001.3gppnetwork.org"
#!define IMS_REALM "ims.mnc001.mcc001.3gppnetwork.org"
#!define SERVER_FQDN "icscf.mnc001.mcc001.3gppnetwork.org"

#!ifdef WITH_DEBUG
debug=4
#!endif

children=4

####### Modules Section ########

mpath="/usr/local/lib/kamailio/modules/"

loadmodule "sl.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "siputils.so"
loadmodule "sdpops.so"
loadmodule "xlog.so"
loadmodule "cdp.so"
loadmodule "cdp_avp.so"
loadmodule "ims_icscf.so"

modparam("tm", "fr_timer", 5000)
modparam("tm", "fr_inv_timer", 60000)
modparam("tm", "restart_fr_on_each_reply", 1)
modparam("tm", "onreply_avp_mode", 1)

modparam("maxfwd", "max_limit", 30)

modparam("rr", "enable_full_lr", 1)

modparam("cdp", "config_file", "/usr/local/etc/kamailio/ims/diameter.xml")

modparam("ims_icscf", "icscf_name", SERVER_FQDN)
modparam("ims_icscf", "icscf_uri", "sip:" SERVER_FQDN)
modparam("ims_icscf", "default_scscf", "sip:scscf.mnc001.mcc001.3gppnetwork.org:5060")
modparam("ims_icscf", "default_realm", IMS_REALM)
modparam("ims_icscf", "scscf_weight", 50)
modparam("ims_icscf", "service_type", 0)
modparam("ims_icscf", "use_cache", 0)
modparam("ims_icscf", "hss_host", HSS_HOST)
modparam("ims_icscf", "hss_realm", HSS_REALM)
modparam("ims_icscf", "reg_table_name", "ims_icscf_contacts")

####### Routing Logic ########

request_route {
    xlog("L_INFO", "[$ci] I-CSCF received $rm from $fu to $ru\n");

    if (!mf_process_maxfwd(10)) {
        sl_send_reply("483", "Too Many Hops");
        exit;
    }

    if (!is_method("REGISTER|INVITE|SUBSCRIBE|NOTIFY|MESSAGE|PRACK|UPDATE|OPTIONS")) {
        sl_send_reply("405", "Method Not Allowed");
        exit;
    }

    if (loose_route()) {
        route(RELAY);
        exit;
    }

    if (is_method("REGISTER")) {
        if (!route(HANDLE_REGISTER)) {
            exit;
        }
        exit;
    }

    if (!route(HANDLE_SESSION)) {
        exit;
    }
}

route[HANDLE_REGISTER] {
    if (!ims_icscf_select_scscf("orig")) {
        sl_send_reply("500", "No S-CSCF Available");
        exit;
    }

    route(RELAY);
    exit;
}

route[HANDLE_SESSION] {
    if (!ims_icscf_select_scscf("term")) {
        sl_send_reply("500", "Unable To Resolve S-CSCF");
        exit;
    }

    route(RELAY);
    exit;
}

route[RELAY] {
    if (!t_is_set("failure")) {
        t_on_failure("FAILURE");
    }

    if (!t_relay()) {
        sl_reply_error();
    }
    exit;
}

failure_route[FAILURE] {
    if (t_is_canceled()) {
        exit;
    }
}
